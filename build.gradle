buildscript {
  repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
  }

  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.0.RELEASE"
    classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
  }
}

apply plugin: "idea"
apply plugin: "eclipse"

group "kr.lul.kobalttown"
version "0.0.7.SNAPSHOT"

allprojects {
  repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
    maven {
      url "https://dl.bintray.com/justburrow/snapshot"
    }
    maven {
      url "https://dl.bintray.com/justburrow/release"
    }
  }
}

subprojects {
  apply plugin: "java"
  apply plugin: "java-library"
  apply plugin: "org.springframework.boot"
  apply plugin: "io.spring.dependency-management"

  sourceCompatibility = 11
  targetCompatibility = 11

  dependencyManagement {
    imports {
      mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }

    dependencies {
      dependency "kr.lul.common:common-util:0.0.1.SNAPSHOT"
      dependency "kr.lul.common:common-data:0.0.1.SNAPSHOT"
      dependency "kr.lul.common:common-web:0.0.1.SNAPSHOT"

      dependency "kr.lul.support.spring:support-spring-data-jpa:0.0.1.SNAPSHOT"
      dependency "kr.lul.support.spring:support-spring-mail:0.0.1.SNAPSHOT"
      dependency "kr.lul.support.spring:support-spring-security:0.0.1.SNAPSHOT"
      dependency "kr.lul.support.spring:support-spring-web:0.0.1.SNAPSHOT"

      dependency "org.assertj:assertj-core:3.14.0"
      dependency "org.apache.commons:commons-lang3:3.9"
    }
  }

  dependencies {
    implementation "kr.lul.common:common-util"
    implementation "org.springframework.boot:spring-boot-starter"

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    runtimeOnly "org.springframework.boot:spring-boot-devtools"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.apache.commons:commons-lang3"
  }

  def projectGroup = rootProject.group
  def projectName = project.name
  def projectVersion = "unspecified" != project.version
      ? project.version
      : rootProject.version
  def isRelease = projectVersion.endsWith("RELEASE")
  def isSnapshot = projectVersion.endsWith("SNAPSHOT")

  println("""
      subproject ========================================
      group : $projectGroup
      name : $projectName
      version : $projectVersion
      release : $isRelease
      snapshot : $isSnapshot
      ===================================================
      """.stripIndent())

  jar.enabled = true
  bootJar.enabled = false
}
